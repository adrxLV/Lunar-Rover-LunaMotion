{
  "version": 2,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 14,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "dev-mode",
      "hidden": true,
      "cacheVariables": {
        "lrn_DEVELOPER_MODE": "ON",
        "VCPKG_MANIFEST_FEATURES": "tests"
      }
    },
    {
      "name": "vcpkg",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
      }
    },
    {
      "name": "vcpkg-win64-static",
      "hidden": true,
      "cacheVariables": {
        "VCPKG_TARGET_TRIPLET": "x64-windows-static-md"
      }
    },
    {
      "name": "arm",
      "hidden": true,
      "cacheVariables": {
        "VCPKG_TARGET_TRIPLET": "arm-buildroot-linux",
        "VCPKG_CHAINLOAD_TOOLCHAIN_FILE": "${sourceDir}/sdk/arm-buildroot-toolchain.cmake"
      }
    },
    {
      "name": "arm64",
      "hidden": true,
      "cacheVariables": {
        "VCPKG_TARGET_TRIPLET": "arm64-buildroot-linux",
        "VCPKG_CHAINLOAD_TOOLCHAIN_FILE": "${sourceDir}/sdk/aarch64-buildroot-toolchain.cmake"
      }
    },
    {
      "name": "arm-rutx",
      "hidden": true,
      "cacheVariables": {
        "VCPKG_TARGET_TRIPLET": "arm-rutx-linux",
        "VCPKG_CHAINLOAD_TOOLCHAIN_FILE": "${sourceDir}/sdk/arm-rutx-toolchain.cmake"
      }
    },
    {
      "name": "cppcheck",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_CPPCHECK": "cppcheck;--inline-suppr;--suppress=*:${sourceDir}/build/*"
      }
    },
    {
      "name": "clang-tidy",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_CLANG_TIDY": "clang-tidy;--header-filter=^${sourceDir}\/(?>lrn|test|liblrn|libspb)"
      }
    },
    {
      "name": "ci-std",
      "description": "This preset makes sure the project actually builds with at least the specified standard",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_EXTENSIONS": "OFF",
        "CMAKE_CXX_STANDARD": "20",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON"
      }
    },
    {
      "name": "flags-gcc-clang",
      "description": "These flags are supported by both GCC and Clang",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "-D_GLIBCXX_ASSERTIONS=1 -fstack-protector-strong -fstack-clash-protection -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -Wcast-qual -Wformat=2 -Wundef -Werror=float-equal -Wshadow -Wcast-align -Wunused -Wnull-dereference -Wdouble-promotion -Wimplicit-fallthrough -Wextra-semi -Woverloaded-virtual -Wnon-virtual-dtor -Wold-style-cast",
        "CMAKE_CXX_FLAGS_RELEASE": "-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3 -O3",
        "CMAKE_EXE_LINKER_FLAGS": "-Wl,--allow-shlib-undefined,--as-needed,-z,noexecstack,-z,relro,-z,now,-z,nodlopen",
        "CMAKE_SHARED_LINKER_FLAGS": "-Wl,--allow-shlib-undefined,--as-needed,-z,noexecstack,-z,relro,-z,now,-z,nodlopen"
      }
    },
    {
      "name": "flags-appleclang",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "-fstack-protector-strong -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -Wcast-qual -Wformat=2 -Wundef -Werror=float-equal -Wshadow -Wcast-align -Wunused -Wnull-dereference -Wdouble-promotion -Wimplicit-fallthrough -Wextra-semi -Woverloaded-virtual -Wnon-virtual-dtor -Wold-style-cast"
      }
    },
    {
      "name": "flags-msvc",
      "description": "Note that all the flags after /W4 are required for MSVC to conform to the language standard",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "/sdl /guard:cf /utf-8 /diagnostics:caret /w14165 /w44242 /w44254 /w44263 /w34265 /w34287 /w44296 /w44365 /w44388 /w44464 /w14545 /w14546 /w14547 /w14549 /w14555 /w34619 /w34640 /w24826 /w14905 /w14906 /w14928 /w45038 /W4 /permissive- /volatile:iso /Zc:inline /Zc:preprocessor /Zc:enumTypes /Zc:lambda /Zc:__cplusplus /Zc:externConstexpr /Zc:throwingNew /EHsc",
        "CMAKE_EXE_LINKER_FLAGS": "/machine:x64 /guard:cf"
      }
    },
    {
      "name": "qemu-br2",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_TEST_COMMAND": "$env{SDK_PATH}/qemu-aarch64;-L;$env{BR2_STAGING_PATH}"
      }
    },
    {
      "name": "ci-linux",
      "generator": "Unix Makefiles",
      "hidden": true,
      "inherits": ["flags-gcc-clang", "ci-std"],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release"
      }
    },
    {
      "name": "ci-darwin",
      "generator": "Unix Makefiles",
      "hidden": true,
      "inherits": ["flags-appleclang", "ci-std"],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release"
      }
    },
    {
      "name": "ci-win64",
      "inherits": ["flags-msvc", "ci-std"],
      "generator": "Visual Studio 17 2022",
      "architecture": "x64",
      "hidden": true
    },
    {
      "name": "coverage-linux",
      "binaryDir": "${sourceDir}/build/coverage",
      "inherits": "ci-linux",
      "hidden": true,
      "cacheVariables": {
        "ENABLE_COVERAGE": "ON",
        "CMAKE_BUILD_TYPE": "Coverage",
        "CMAKE_CXX_FLAGS_COVERAGE": "-Og -g --coverage -fkeep-static-functions",
        "CMAKE_EXE_LINKER_FLAGS_COVERAGE": "--coverage",
        "CMAKE_SHARED_LINKER_FLAGS_COVERAGE": "--coverage",
        "CMAKE_MAP_IMPORTED_CONFIG_COVERAGE": "Coverage;RelWithDebInfo;Release;Debug;"
      }
    },
    {
      "name": "ci-coverage",
      "inherits": ["coverage-linux", "dev-mode", "vcpkg"],
      "cacheVariables": {
        "COVERAGE_HTML_COMMAND": ""
      }
    },
    {
      "name": "ci-sanitize",
      "binaryDir": "${sourceDir}/build/sanitize",
      "inherits": ["ci-linux", "dev-mode", "vcpkg"],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Sanitize",
        "CMAKE_CXX_FLAGS_SANITIZE": "-U_FORTIFY_SOURCE -O2 -g -fsanitize=address,undefined -fno-omit-frame-pointer -fno-common",
        "CMAKE_MAP_IMPORTED_CONFIG_SANITIZE": "Sanitize;RelWithDebInfo;Release;Debug;"
      }
    },
    {
      "name": "ci-sanitize-windows",
      "binaryDir": "${sourceDir}/build/sanitize",
      "inherits": ["ci-win64", "dev-mode", "vcpkg"],
      "cacheVariables": {
        "SANITIZE": "ON",        
        "VCPKG_TARGET_TRIPLET": "x64-windows-sanitize"
      }
    },
    {
      "name": "ci-coverage-arm",
      "inherits": ["ci-coverage", "arm"]
    },
    {
      "name": "ci-coverage-arm64",
      "inherits": ["ci-coverage", "arm64"]
    },
    {
      "name": "ci-sanitize-arm",
      "inherits": ["ci-sanitize", "arm"]
    },
    {
      "name": "ci-sanitize-arm64",
      "inherits": ["ci-sanitize", "arm64"]
    },
    {
      "name": "ci-build",
      "binaryDir": "${sourceDir}/build",
      "hidden": true
    },
    {
      "name": "ci-macos",
      "inherits": ["ci-build", "ci-darwin", "dev-mode", "vcpkg"]
    },
    {
      "name": "ci-debian",
      "inherits": ["ci-build", "ci-linux", "clang-tidy", "vcpkg", "cppcheck", "dev-mode"]
    },
    {
      "name": "ci-debian-release",
      "inherits": ["ci-build", "ci-linux", "vcpkg"]
    },
    {
      "name": "ci-arm-rutx",
      "inherits": ["ci-build", "ci-linux", "clang-tidy", "vcpkg", "arm-rutx", "cppcheck", "dev-mode"]
    },
    {
      "name": "ci-arm-rutx-release",
      "inherits": ["ci-build", "ci-linux", "vcpkg", "arm-rutx"]
    },
    {
      "name": "ci-windows",
      "inherits": ["ci-build", "ci-win64", "dev-mode", "vcpkg"]
    },
    {
      "name": "ci-windows-release",
      "inherits": ["ci-build", "ci-win64", "vcpkg"]
    },
    {
      "name": "ci-windows-static",
      "inherits": ["ci-build", "ci-win64", "vcpkg", "vcpkg-win64-static"]
    },
    {
      "name": "ci-buildroot",
      "inherits": ["ci-build", "ci-linux", "clang-tidy", "vcpkg", "arm", "cppcheck", "dev-mode"]
    },
    {
      "name": "ci-buildroot-arm64",
      "inherits": ["ci-build", "ci-linux", "clang-tidy", "vcpkg", "arm64", "cppcheck", "dev-mode"]
    }
  ]
}
